/*
Copyright IBM Corp. 2017 All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

		 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

Modified java_package and other contents by Dingxuan on 2018-03-02
*/

syntax = "proto3";

package protos;
option java_package = "org.bcia.julongchain.protos.node";
option go_package = "github.com/hyperledger/fabric/protos/peer";
option java_outer_classname = "SmartContractPackage";
import "google/protobuf/timestamp.proto";


// Confidentiality Levels
enum ConfidentialityLevel {
    PUBLIC = 0;
    CONFIDENTIAL = 1;
}


//SmartContractID contains the path as specified by the deploy transaction
//that created it as well as the hashCode that is generated by the
//system for the path. From the user level (ie, CLI, REST API and so on)
//deploy transaction is expected to provide the path and other requests
//are expected to provide the hashCode. The other value will be ignored.
//Internally, the structure could contain both values. For instance, the
//hashCode will be set when first generated using the path
message SmartContractID {
    //deploy transaction will use the path
    string path = 1;

    //all other requests will use the name (really a hashcode) generated by
    //the deploy transaction
    string name = 2;

    //user friendly version name for the SmartContract
    string version = 3;
}

// Carries the SmartContract function and its arguments.
// UnmarshalJSON in transaction.go converts the string-based REST/JSON input to
// the []byte-based current SmartContractInput structure.
message SmartContractInput {
    repeated bytes args  = 1;
    map<string, bytes> decorations = 2;
}

// Carries the SmartContract specification. This is the actual metadata required for
// defining a SmartContract.
message SmartContractSpec {

    enum Type {
        UNDEFINED = 0;
        GOLANG = 1;
        NODE = 2;
        CAR = 3;
        JAVA = 4;
    }

    Type type = 1;
    SmartContractID smart_contract_id = 2;
    SmartContractInput input = 3;
    int32 timeout = 4;
}

// Specify the deployment of a SmartContract.
// TODO: Define `codePackage`.
message SmartContractDeploymentSpec {

    enum ExecutionEnvironment {
        DOCKER = 0;
        SYSTEM = 1;
    }

    SmartContractSpec smart_contract_spec = 1;
    // Controls when the SmartContract becomes executable.
    google.protobuf.Timestamp effective_date = 2;
    bytes code_package = 3;
    ExecutionEnvironment exec_env=  4;

}

// Carries the SmartContract function and its arguments.
message SmartContractInvocationSpec {

    SmartContractSpec smart_contract_spec = 1;
    // This field can contain a user-specified ID generation algorithm
    // If supplied, this will be used to generate a ID
    // If not supplied (left empty), sha256base64 will be used
    // The algorithm consists of two parts:
    //  1, a hash function
    //  2, a decoding used to decode user (string) input to bytes
    // Currently, SHA256 with BASE64 is supported (e.g. idGenerationAlg='sha256base64')
    string id_generation_alg = 2;
}
